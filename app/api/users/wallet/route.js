// /app/api/users/wallet/route.js
import { NextResponse } from "next/server";
import dbConnect from "@/db/connect";
import User from "@/models/user.model";
import Result from "@/models/result.model"; // ‚úÖ ‡¶®‡¶§‡ßÅ‡¶®

/*
  body: { email }
  ‡¶ï‡¶æ‡¶ú:
   - ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¶‡¶ø‡ßü‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá walletBalance ‡¶¶‡ßá‡¶¨‡ßá
   - Result ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶•‡ßá‡¶ï‡ßá single/double/triple ‡¶è‡¶®‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ time/number ‡¶¶‡ßá‡¶¨‡ßá
*/
export async function POST(req) {
  try {
    const body = await req.json();
    const email = String(body?.email || "").trim().toLowerCase();

    if (!email) {
      return NextResponse.json(
        { success: false, message: "‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¶‡¶ø‡¶®" },
        { status: 400 }
      );
    }

    await dbConnect();

    const [user, results] = await Promise.all([
      User.findOne({ email }).select("walletBalance").lean(),
      Result.find({ name: { $in: ["single", "double", "triple"] } })
        .select("name time number")
        .lean(),
    ]);

    if (!user) {
      return NextResponse.json(
        { success: false, message: "‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø" },
        { status: 404 }
      );
    }

    // ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™‡¶ø‡¶Ç: { single: {time, number}, ... }
    const map = { single: null, double: null, triple: null };
    results.forEach((r) => {
      if (["single", "double", "triple"].includes(r.name)) {
        map[r.name] = { time: r.time || null, number: r.number ?? null };
      }
    });

    return NextResponse.json(
      {
        success: true,
        message: "‡¶ì‡ßü‡¶æ‡¶≤‡ßá‡¶ü + ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶ü‡¶æ‡¶á‡¶Æ",
        data: {
          walletBalance: Number(user.walletBalance || 0),
          results: map, // üëà ‡¶´‡ßç‡¶∞‡¶®‡ßç‡¶ü‡¶è‡¶®‡ßç‡¶°‡ßá ‡¶ü‡¶æ‡¶á‡¶Æ ‡¶∂‡ßã ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
        },
      },
      { status: 200 }
    );
  } catch (err) {
    return NextResponse.json(
      {
        success: false,
        message: "‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø",
        error: String(err?.message || err),
      },
      { status: 500 }
    );
  }
}
